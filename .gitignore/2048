#include<stdio.h>
#include<conio.h>
#include<time.h>
#include <stdlib.h>

void push_null(int arr[][4]);
void push_num(int arr[][4]);
int up(int arr[][4], int *psum);
int down(int arr[][4], int *psum);
int left(int arr[][4], int *psum);
int right(int arr[][4], int *psum);

void print(int arr[][4]);

main(){
	int arr[4][4], arr1[4][4];
	int i, j, red, col, spc, spr, sp, flag, sum, sum1;
	char c;
	time_t t;
	srand(time(&t)); 
		
	push_null(arr);
	i = 0;
	flag = 1;
	sum = 0;	
	do{
		
		for(spr = 0, sp = 0; spr < 4; spr++)
			for(spc = 0; spc < 4; spc++)
				if(arr[spr][spc] == NULL)
					sp = 1;
		if(sp == 0){
			printf("GAME OVER!");
			return 1;
		}
		
		if(i == 0)
			while(i < 2){
				push_num(arr);
				i++;
			}
		if(i > 2 && flag == 1)
			push_num(arr);	
		printf("Score %d Undo press q\n\n", sum);printf("flag=%d\n",flag);
		flag = 0;
		print(arr);
	
		c = getch();
				
		if(c == 'w' || c == 'W')
			flag = up(arr, &sum);
			else if(c == 's' || c == 'S')
				flag = down(arr, &sum);	
				else if(c == 'a' || c == 'A')
					flag = left(arr, &sum);
					else if(c == 'd' || c == 'D')
						flag = right(arr, &sum);
						
		printf("\n");
		system("cls");
	}while(1);
}

void push_null(int arr[][4]){
	int i,j;
	for(i = 0; i < 4; i++)
		for(j = 0; j < 4; j++)
			arr[i][j] = NULL;
}

void push_num(int arr[][4]){
	int red, col, k;
	do{
		red = rand()%4;	
		col = rand()%4;
	}while(arr[red][col] != NULL);
		k = rand()%100;
		if(k < 91)
			arr[red][col] = 2;
			else 
				arr[red][col] = 4;	
}

int up(int arr[][4], int *psum){
	int i, j, i1, flag, br1;
	
	flag = 0;
	br1 = 0;
	do{
		for(i1 = 0; i1 < 4; i1++)
			for(i = 1; i<4; i++)
				for(j = 0; j<4; j++){
					if(arr[i-1][j] == NULL && arr[i][j] != NULL){
						arr[i-1][j] = arr[i][j];
						arr[i][j] = NULL;
						flag = 1;
					}
				}
		br1++;
		if(br1==2)break;
		for(i = 1; i < 4; i++)
	     	 for(j = 0; j < 4; j++){	
				if(arr[i][j] == arr[i-1][j] && arr[i-1][j] != NULL && arr[i][j] != NULL){
					arr[i-1][j]+=arr[i][j];
					*psum = *psum + arr[i-1][j];
					arr[i][j] = NULL;
					flag = 1;
				}		
			  }
	}while(br1 > 0);
	if(flag == 1) return 1;
		else return 0;
}

int down(int arr[][4], int *psum){
	int i, j, i1, flag, br1;
	
	flag = 0;
	br1 = 0;
	do{
		for(i1 = 0; i1 < 4; i1++)
			for(i = 2; i >= 0; i--)
				for(j = 0; j < 4; j++){
					if(arr[i+1][j] == NULL && arr[i][j] != NULL){
						arr[i+1][j] = arr[i][j];
						arr[i][j] = NULL;
						flag = 1;
					}
				}
		br1++;
		if(br1 == 2)break;
		for(i = 3; i > 0; i--)
			for(j = 0; j<4; j++){
				if(arr[i][j] == arr[i+1][j] && arr[i][j] != NULL && arr[i+1][j] != NULL){
					arr[i+1][j]*=2;
					*psum = *psum + arr[i+1][j];
					arr[i][j] = NULL;
					flag = 1;
				}	
			}
	}while(br1 > 0);
	
	if(flag == 1) return 1;
		else return 0;
}

int left(int arr[][4], int *psum){
	int i, j, i1, flag, br1;
	
	flag = 0;
	br1 = 0;
	do{
		for(i1 = 0; i1 < 4; i1++)
			for(i = 0; i < 4; i++)
				for(j = 1; j < 4; j++){
					if(arr[i][j-1] == NULL && arr[i][j] != NULL){
						arr[i][j-1] = arr[i][j];
						arr[i][j] = NULL;
						flag = 1;
					}
				}
		br1++;
		if(br1 == 2)break;
		for(i = 0; i < 4; i++)
			for(j = 1; j < 4; j++){
				if(arr[i][j] == arr[i][j-1] && arr[i][j] !=NULL && arr[i][j-1] != NULL){
					arr[i][j-1]+=arr[i][j];
					*psum = *psum + arr[i][j-1];
					arr[i][j] = NULL;
					flag = 1;
				}
				
			}
	}while(br1 > 0);
		
	if(flag == 1) return 1;
		else return 0;
}

int right(int arr[][4], int *psum){
	int i, j, i1, flag, br1;
	
	flag = 0;
	br1 = 0;
	do{
		for(i1 = 0; i1 < 4; i1++)
			for(i = 0; i < 4; i++)
				for(j = 2; j >= 0; j--){
					if(arr[i][j+1] == NULL && arr[i][j] != NULL){
						arr[i][j+1] = arr[i][j];
						arr[i][j] = NULL;
						flag = 1;
					}
				}
		br1++;
		if(br1 == 2)break;
		for(i = 0; i < 4; i++)
			for(j = 2; j >= 0; j--){	
				if(arr[i][j+1] == arr[i][j] && arr[i][j+1] != NULL && arr[i][j] != NULL){
					arr[i][j+1]+=arr[i][j];
					*psum = *psum + arr[i][j+1];
					arr[i][j] = NULL;
					flag = 1;
				}
				
			}
	}while(br1 > 0);
	
	if(flag == 1) return 1;
		else return 0;
}


void print(int arr[][4]){
	int i, j;
	
	for(i = 0; i < 4; i++)
		for(j = 0; j < 4; j++){
			printf("%d\t", arr[i][j]);
			if(j == 3)printf("\n\n\n");
		}
	
}

